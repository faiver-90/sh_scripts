print(json.dumps(data, indent=4, ensure_ascii=True))

has_project_role(request.user, project_id, ["admin", "moderator"])
has_project_role(request.user, project_id, [RoleType.ADMIN, RoleType.EDITOR])

# Только модераторам
has_group_role(request.user, group_id, [RoleType.MODERATOR])

ПРоверка на админа, если не админ, то овнер, или ошибка
    try:
        has_project_role(request.user, project_id, [RoleType.ADMIN])
    except PermissionError:
        verify_project_owner(request.user, project_id)


verify_project_owner(user, project_id):
verify_group_owner(user, group_id):
has_project_role(user, project_id, allowed_roles: list[RoleType]):
has_group_role(user, group_id, allowed_roles: list[RoleType]):


SELECT p.code, p.name FROM common_permission p JOIN common_admin_permissions ap ON ap.permission_id = p.id WHERE ap.admin_id = 3;
@AccessService.require_permission(
    permission_code=[PermissionChoices.NEWS,
                     PermissionChoices.USERS],
    roles=[RoleChoices.MODERATOR]
)